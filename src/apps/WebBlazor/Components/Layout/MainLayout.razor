@inherits LayoutComponentBase

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Application</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        // Base
        Primary = "#2563EB",
        Surface = "#E9F2FF",
        Background = "#FFFFFF",
        BackgroundGray = "#F5F8FD",

        // AppBar / Drawer
        AppbarText = "#0B1220",
        AppbarBackground = "#E9F2FF",
        DrawerBackground = "#F6FAFF",
        DrawerIcon = "#3B5C91",
        DrawerText = "#15223B",

        // Texto
        TextPrimary = "#0B1220",
        TextSecondary = "#4B5875",
        TextDisabled = "rgba(11,18,32,0.38)",

        // Acciones
        ActionDefault = "#5B7EC6",
        ActionDisabled = "rgba(11,18,32,0.26)",
        ActionDisabledBackground = "rgba(11,18,32,0.12)",

        // Grises / divisores
        GrayLight = "#E6ECF8",
        GrayLighter = "#F5F8FD",
        LinesDefault = "#D7E0F2",
        TableLines = "#DDE6F6",
        Divider = "#E1E8F5",
        OverlayLight = "rgba(37,99,235,0.08)",

        // Estados
        Info = "#1E88E5",
        Success = "#2E7D32",
        Warning = "#ED6C02",
        Error = "#D32F2F",

        // Contraste de texto sobre chips/alertas
        SuccessContrastText = "#FFFFFF",
        WarningContrastText = "#000000",
        ErrorContrastText = "#FFFFFF",
        InfoContrastText = "#FFFFFF",

        // Tablas
        TableStriped = "#DDE9FF",
        TableHover = "rgba(37,99,235,0.24)"
    };

    private readonly PaletteDark _darkPalette = new()
    {
        // Base
        Primary = "#66BB6A",
        Surface = "#1E2621",
        Background = "#000000",
        BackgroundGray = "#121A15",

        // AppBar / Drawer
        AppbarText = "#E6F2EA",
        AppbarBackground = "#1E2621",
        DrawerBackground = "#141A14",
        DrawerIcon = "#CFEAD6",
        DrawerText = "#DAE7DE",

        // Acciones
        ActionDefault = "#9FB5A7",
        ActionDisabled = "rgba(218,231,222,0.30)",
        ActionDisabledBackground = "rgba(159,181,167,0.30)",

        // Texto
        TextPrimary = "#EAF4EE",
        TextSecondary = "#BFD0C6",
        TextDisabled = "rgba(234,244,238,0.38)",

        // Grises / divisores
        GrayLight = "#1F2722",
        GrayLighter = "#121A15",
        LinesDefault = "#243029",
        TableLines = "#243029",
        Divider = "#1B241F",
        OverlayLight = "rgba(102,187,106,0.10)",

        // Estados
        Info = "#4FC3F7",
        Success = "#66BB6A",
        Warning = "#FFB74D",
        Error = "#EF5350",

        // Tablas
        TableStriped = "rgba(102,187,106,0.08)",
        TableHover = "rgba(102,187,106,0.28)"
    };


    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


