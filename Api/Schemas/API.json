{
  "x-generator": "NSwag v14.5.0.0 (NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Genesys API",
    "version": "v1"
  },
  "paths": {
    "/api/Groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_GetGroups",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDTOOfGroupDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Groups/{groupId}/individuals": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_GetGroupIndividuals",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserEntityListing"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/routing/queues": {
      "get": {
        "tags": [
          "Routing"
        ],
        "operationId": "Routing_GetQueues",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueEntityListing"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/routing/queues/divisionviews": {
      "get": {
        "tags": [
          "Routing"
        ],
        "operationId": "Routing_GetQueuesDivisionviews",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          },
          {
            "name": "divisionId",
            "x-originalName": "divisionIds",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueEntityListing"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUsers",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDTOOfUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PagedResultDTOOfGroupDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GroupDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserEntityListing": {
        "type": "object",
        "description": "UserEntityListing",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "description": "Gets or Sets Entities",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets or Sets PageSize",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Gets or Sets PageNumber",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Gets or Sets Total",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "description": "Gets or Sets FirstUri",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "description": "Gets or Sets NextUri",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "description": "Gets or Sets PreviousUri",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "description": "Gets or Sets LastUri",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Gets or Sets PageCount",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "description": "User",
        "additionalProperties": false,
        "properties": {
          "state": {
            "description": "The current state for this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Division"
              }
            ]
          },
          "chat": {
            "description": "Gets or Sets Chat",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Chat"
              }
            ]
          },
          "department": {
            "type": "string",
            "description": "Gets or Sets Department",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "Gets or Sets Email",
            "nullable": true
          },
          "primaryContactInfo": {
            "type": "array",
            "description": "Auto populated from addresses.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "addresses": {
            "type": "array",
            "description": "Email addresses and phone numbers for this user",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "title": {
            "type": "string",
            "description": "Gets or Sets Title",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Gets or Sets Username",
            "nullable": true
          },
          "manager": {
            "description": "Gets or Sets Manager",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "images": {
            "type": "array",
            "description": "Gets or Sets Images",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "version": {
            "type": "integer",
            "description": "Required when updating a user, this value should be the current version of the user.  The current version can be obtained with a GET on the user before doing a PATCH.",
            "format": "int32",
            "nullable": true
          },
          "certifications": {
            "type": "array",
            "description": "Gets or Sets Certifications",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "biography": {
            "description": "Gets or Sets Biography",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Biography"
              }
            ]
          },
          "employerInfo": {
            "description": "Gets or Sets EmployerInfo",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmployerInfo"
              }
            ]
          },
          "preferredName": {
            "type": "string",
            "description": "Preferred full name of the agent",
            "nullable": true
          },
          "routingStatus": {
            "description": "ACD routing status",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RoutingStatus"
              }
            ]
          },
          "presence": {
            "description": "Active presence",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserPresence"
              }
            ]
          },
          "integrationPresence": {
            "description": "Integration presence",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserPresence"
              }
            ]
          },
          "conversationSummary": {
            "description": "Summary of conversion statistics for conversation types.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserConversationSummary"
              }
            ]
          },
          "outOfOffice": {
            "description": "Determine if out of office is enabled",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OutOfOffice"
              }
            ]
          },
          "geolocation": {
            "description": "Current geolocation position",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Geolocation"
              }
            ]
          },
          "station": {
            "description": "Effective, default, and last station information",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStations"
              }
            ]
          },
          "authorization": {
            "description": "Roles and permissions assigned to the user",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserAuthorization"
              }
            ]
          },
          "profileSkills": {
            "type": "array",
            "description": "Profile skills possessed by the user",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "locations": {
            "type": "array",
            "description": "The user placement at each site location.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Location"
            }
          },
          "groups": {
            "type": "array",
            "description": "The groups the user is a member of",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Group"
            }
          },
          "team": {
            "description": "The team the user is a member of",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Team"
              }
            ]
          },
          "workPlanBidRanks": {
            "description": "The WFM work plan bid rank settings for the user",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WorkPlanBidRanks"
              }
            ]
          },
          "skills": {
            "type": "array",
            "description": "Routing (ACD) skills possessed by the user",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserRoutingSkill"
            }
          },
          "languages": {
            "type": "array",
            "description": "Routing (ACD) languages possessed by the user",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/UserRoutingLanguage"
            }
          },
          "acdAutoAnswer": {
            "type": "boolean",
            "description": "acd auto answer",
            "nullable": true
          },
          "languagePreference": {
            "type": "string",
            "description": "preferred language by the user",
            "nullable": true
          },
          "lastTokenIssued": {
            "description": "Gets or Sets LastTokenIssued",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OAuthLastTokenIssued"
              }
            ]
          },
          "dateLastLogin": {
            "type": "string",
            "description": "The last time the user logged in using username and password. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "dateWelcomeSent": {
            "type": "string",
            "description": "The date & time the user was sent their welcome email. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "StateEnum": {
        "type": "integer",
        "description": "The current state for this user.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "Division": {
        "type": "object",
        "description": "Division",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "Chat": {
        "type": "object",
        "description": "Chat",
        "additionalProperties": false,
        "properties": {
          "jabberId": {
            "type": "string",
            "description": "Gets or Sets JabberId",
            "nullable": true
          }
        }
      },
      "Contact": {
        "type": "object",
        "description": "Contact",
        "additionalProperties": false,
        "properties": {
          "mediaType": {
            "description": "Gets or Sets MediaType",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaTypeEnum"
              }
            ]
          },
          "type": {
            "description": "Gets or Sets Type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum"
              }
            ]
          },
          "address": {
            "type": "string",
            "description": "Email address or phone number for this contact type",
            "nullable": true
          },
          "display": {
            "type": "string",
            "description": "Formatted version of the address property",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "description": "Use internal extension instead of address. Mutually exclusive with the address field.",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "description": "Gets or Sets CountryCode",
            "nullable": true
          },
          "integration": {
            "type": "string",
            "description": "Integration tag value if this number is associated with an external integration.",
            "nullable": true
          }
        }
      },
      "MediaTypeEnum": {
        "type": "integer",
        "description": "Gets or Sets MediaType",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Phone",
          "Email",
          "Sms"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Phone",
          "Email",
          "Sms"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Phone",
          "Email",
          "Sms"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "TypeEnum": {
        "type": "integer",
        "description": "Gets or Sets Type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Primary",
          "Work",
          "Work2",
          "Work3",
          "Work4",
          "Home",
          "Mobile",
          "Main",
          "Other"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Primary",
          "Work",
          "Work2",
          "Work3",
          "Work4",
          "Home",
          "Mobile",
          "Main",
          "Other"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Primary",
          "Work",
          "Work2",
          "Work3",
          "Work4",
          "Home",
          "Mobile",
          "Main",
          "Other"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "Image": {
        "type": "object",
        "description": "Image",
        "additionalProperties": false,
        "properties": {
          "resolution": {
            "type": "string",
            "description": "Height and/or width of image. ex: 640x480 or x128",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "description": "Gets or Sets ImageUri",
            "nullable": true
          }
        }
      },
      "Biography": {
        "type": "object",
        "description": "Biography",
        "additionalProperties": false,
        "properties": {
          "_Biography": {
            "type": "string",
            "description": "Personal detailed description",
            "nullable": true
          },
          "interests": {
            "type": "array",
            "description": "Gets or Sets Interests",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "hobbies": {
            "type": "array",
            "description": "Gets or Sets Hobbies",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "spouse": {
            "type": "string",
            "description": "Gets or Sets Spouse",
            "nullable": true
          },
          "education": {
            "type": "array",
            "description": "User education details",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Education"
            }
          }
        }
      },
      "Education": {
        "type": "object",
        "description": "Education",
        "additionalProperties": false,
        "properties": {
          "school": {
            "type": "string",
            "description": "Gets or Sets School",
            "nullable": true
          },
          "fieldOfStudy": {
            "type": "string",
            "description": "Gets or Sets FieldOfStudy",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "description": "Notes about education has a 2000 character limit",
            "nullable": true
          },
          "dateStart": {
            "type": "string",
            "description": "Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd",
            "nullable": true
          },
          "dateEnd": {
            "type": "string",
            "description": "Dates are represented as an ISO-8601 string. For example: yyyy-MM-dd",
            "nullable": true
          }
        }
      },
      "EmployerInfo": {
        "type": "object",
        "description": "EmployerInfo",
        "additionalProperties": false,
        "properties": {
          "officialName": {
            "type": "string",
            "description": "Gets or Sets OfficialName",
            "nullable": true
          },
          "employeeId": {
            "type": "string",
            "description": "Gets or Sets EmployeeId",
            "nullable": true
          },
          "employeeType": {
            "type": "string",
            "description": "Gets or Sets EmployeeType",
            "nullable": true
          },
          "dateHire": {
            "type": "string",
            "description": "Gets or Sets DateHire",
            "nullable": true
          }
        }
      },
      "RoutingStatus": {
        "type": "object",
        "description": "RoutingStatus",
        "additionalProperties": false,
        "properties": {
          "status": {
            "description": "Indicates the Routing State of the agent.  A value of OFF_QUEUE will be returned if the specified user does not exist.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusEnum"
              }
            ]
          },
          "userId": {
            "type": "string",
            "description": "The userId of the agent",
            "nullable": true
          },
          "startTime": {
            "type": "string",
            "description": "The timestamp when the agent went into this state. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "StatusEnum": {
        "type": "integer",
        "description": "Indicates the Routing State of the agent.  A value of OFF_QUEUE will be returned if the specified user does not exist.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "OffQueue",
          "Idle",
          "Interacting",
          "NotResponding",
          "Communicating"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "OffQueue",
          "Idle",
          "Interacting",
          "NotResponding",
          "Communicating"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "OffQueue",
          "Idle",
          "Interacting",
          "NotResponding",
          "Communicating"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "UserPresence": {
        "type": "object",
        "description": "UserPresence",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "source": {
            "type": "string",
            "description": "Deprecated - The sourceID field should be used as a replacement.",
            "nullable": true
          },
          "sourceId": {
            "type": "string",
            "description": "Represents the ID of a registered source",
            "nullable": true
          },
          "primary": {
            "type": "boolean",
            "description": "A boolean used to tell whether or not to set this presence source as the primary on a PATCH",
            "nullable": true
          },
          "presenceDefinition": {
            "description": "Gets or Sets PresenceDefinition",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PresenceDefinition"
              }
            ]
          },
          "message": {
            "type": "string",
            "description": "Gets or Sets Message",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "PresenceDefinition": {
        "type": "object",
        "description": "PresenceDefinition",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "description",
            "nullable": true
          },
          "systemPresence": {
            "type": "string",
            "description": "Gets or Sets SystemPresence",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "UserConversationSummary": {
        "type": "object",
        "description": "UserConversationSummary",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "description": "Gets or Sets UserId",
            "nullable": true
          },
          "call": {
            "description": "Gets or Sets Call",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "callback": {
            "description": "Gets or Sets Callback",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "email": {
            "description": "Gets or Sets Email",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "message": {
            "description": "Gets or Sets Message",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "chat": {
            "description": "Gets or Sets Chat",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "socialExpression": {
            "description": "Gets or Sets SocialExpression",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          },
          "video": {
            "description": "Gets or Sets Video",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummary"
              }
            ]
          }
        }
      },
      "MediaSummary": {
        "type": "object",
        "description": "MediaSummary",
        "additionalProperties": false,
        "properties": {
          "contactCenter": {
            "description": "Gets or Sets ContactCenter",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummaryDetail"
              }
            ]
          },
          "enterprise": {
            "description": "Gets or Sets Enterprise",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSummaryDetail"
              }
            ]
          }
        }
      },
      "MediaSummaryDetail": {
        "type": "object",
        "description": "MediaSummaryDetail",
        "additionalProperties": false,
        "properties": {
          "active": {
            "type": "integer",
            "description": "Gets or Sets Active",
            "format": "int32",
            "nullable": true
          },
          "acw": {
            "type": "integer",
            "description": "Gets or Sets Acw",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "OutOfOffice": {
        "type": "object",
        "description": "OutOfOffice",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "user": {
            "description": "Gets or Sets User",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "startDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "Gets or Sets Active",
            "nullable": true
          },
          "indefinite": {
            "type": "boolean",
            "description": "Gets or Sets Indefinite",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "Geolocation": {
        "type": "object",
        "description": "Geolocation",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "A string used to describe the type of client the geolocation is being updated from e.g. ios, android, web, etc.",
            "nullable": true
          },
          "primary": {
            "type": "boolean",
            "description": "A boolean used to tell whether or not to set this geolocation client as the primary on a PATCH",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "description": "Gets or Sets Latitude",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "description": "Gets or Sets Longitude",
            "format": "double",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Gets or Sets Country",
            "nullable": true
          },
          "region": {
            "type": "string",
            "description": "Gets or Sets Region",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "Gets or Sets City",
            "nullable": true
          },
          "locations": {
            "type": "array",
            "description": "Gets or Sets Locations",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocationDefinition"
            }
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "LocationDefinition": {
        "type": "object",
        "description": "LocationDefinition",
        "additionalProperties": false,
        "properties": {
          "state": {
            "description": "Current state of the location entity",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateEnum2"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "contactUser": {
            "description": "Site contact for the location entity",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AddressableEntityRef"
              }
            ]
          },
          "emergencyNumber": {
            "description": "Emergency number for the location entity",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationEmergencyNumber"
              }
            ]
          },
          "address": {
            "description": "Gets or Sets Address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationAddress"
              }
            ]
          },
          "notes": {
            "type": "string",
            "description": "Notes for the location entity",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "description": "Current version of the location entity, value to be supplied should be retrieved by a GET or on create/update response",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "array",
            "description": "A list of ancestor IDs in order",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "profileImage": {
            "type": "array",
            "description": "Profile image of the location entity, retrieved with ?expand=images query parameter",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocationImage"
            }
          },
          "floorplanImage": {
            "type": "array",
            "description": "Floorplan images of the location entity, retrieved with ?expand=images query parameter",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/LocationImage"
            }
          },
          "addressVerificationDetails": {
            "description": "Address verification information, retrieve dwith the ?expand=addressVerificationDetails query parameter",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationAddressVerificationDetails"
              }
            ]
          },
          "addressVerified": {
            "type": "boolean",
            "description": "Boolean field which states if the address has been verified as an actual address",
            "nullable": true
          },
          "addressStored": {
            "type": "boolean",
            "description": "Boolean field which states if the address has been stored for E911",
            "nullable": true
          },
          "images": {
            "type": "string",
            "description": "Gets or Sets Images",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "StateEnum2": {
        "type": "integer",
        "description": "Current state of the location entity",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Active",
          "Deleted"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Active",
          "Deleted"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Active",
          "Deleted"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "AddressableEntityRef": {
        "type": "object",
        "description": "AddressableEntityRef",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          }
        }
      },
      "LocationEmergencyNumber": {
        "type": "object",
        "description": "LocationEmergencyNumber",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "The type of emergency number.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum2"
              }
            ]
          },
          "e164": {
            "type": "string",
            "description": "Gets or Sets E164",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "Gets or Sets Number",
            "nullable": true
          }
        }
      },
      "TypeEnum2": {
        "type": "integer",
        "description": "The type of emergency number.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Default",
          "Elin"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Default",
          "Elin"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Default",
          "Elin"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "LocationAddress": {
        "type": "object",
        "description": "LocationAddress",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "description": "Gets or Sets City",
            "nullable": true
          },
          "country": {
            "type": "string",
            "description": "Gets or Sets Country",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "Gets or Sets CountryName",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Gets or Sets State",
            "nullable": true
          },
          "street1": {
            "type": "string",
            "description": "Gets or Sets Street1",
            "nullable": true
          },
          "street2": {
            "type": "string",
            "description": "Gets or Sets Street2",
            "nullable": true
          },
          "zipcode": {
            "type": "string",
            "description": "Gets or Sets Zipcode",
            "nullable": true
          }
        }
      },
      "LocationImage": {
        "type": "object",
        "description": "LocationImage",
        "additionalProperties": false,
        "properties": {
          "resolution": {
            "type": "string",
            "description": "Height and/or width of image. ex: 640x480 or x128",
            "nullable": true
          },
          "imageUri": {
            "type": "string",
            "description": "Gets or Sets ImageUri",
            "nullable": true
          }
        }
      },
      "LocationAddressVerificationDetails": {
        "type": "object",
        "description": "LocationAddressVerificationDetails",
        "additionalProperties": false,
        "properties": {
          "status": {
            "description": "Status of address verification process",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StatusEnum2"
              }
            ]
          },
          "dateFinished": {
            "type": "string",
            "description": "Finished time of address verification process. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "dateStarted": {
            "type": "string",
            "description": "Time started of address verification process. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "service": {
            "type": "string",
            "description": "Third party service used for address verification",
            "nullable": true
          }
        }
      },
      "StatusEnum2": {
        "type": "integer",
        "description": "Status of address verification process",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Pending",
          "Inprogress",
          "Retry",
          "Complete",
          "Failed"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Pending",
          "Inprogress",
          "Retry",
          "Complete",
          "Failed"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Pending",
          "Inprogress",
          "Retry",
          "Complete",
          "Failed"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "UserStations": {
        "type": "object",
        "description": "UserStations",
        "additionalProperties": false,
        "properties": {
          "associatedStation": {
            "description": "Current associated station for this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStation"
              }
            ]
          },
          "effectiveStation": {
            "description": "The station where the user can be reached based on their default and associated station.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStation"
              }
            ]
          },
          "defaultStation": {
            "description": "Default station to be used if not associated with a station.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStation"
              }
            ]
          },
          "lastAssociatedStation": {
            "description": "Last associated station for this user.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserStation"
              }
            ]
          }
        }
      },
      "UserStation": {
        "type": "object",
        "description": "UserStation",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "A globally unique identifier for this station",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "type": {
            "type": "string",
            "description": "Gets or Sets Type",
            "nullable": true
          },
          "associatedUser": {
            "description": "Gets or Sets AssociatedUser",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "associatedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "defaultUser": {
            "description": "Gets or Sets DefaultUser",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/User"
              }
            ]
          },
          "providerInfo": {
            "type": "object",
            "description": "Provider-specific info for this station, e.g. { \\\"edgeGroupId\\\": \\\"ffe7b15c-a9cc-4f4c-88f5-781327819a49\\\" }",
            "nullable": true,
            "additionalProperties": {
              "type": "string"
            }
          },
          "webRtcCallAppearances": {
            "type": "integer",
            "description": "The number of call appearances on the station.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UserAuthorization": {
        "type": "object",
        "description": "UserAuthorization",
        "additionalProperties": false,
        "properties": {
          "roles": {
            "type": "array",
            "description": "Gets or Sets Roles",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DomainRole"
            }
          },
          "unusedRoles": {
            "type": "array",
            "description": "A collection of the roles the user is not using",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DomainRole"
            }
          },
          "permissions": {
            "type": "array",
            "description": "A collection of the permissions granted by all assigned roles",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "permissionPolicies": {
            "type": "array",
            "description": "The policies configured for assigned permissions.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResourcePermissionPolicy"
            }
          }
        }
      },
      "DomainRole": {
        "type": "object",
        "description": "DomainRole",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the role",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the role",
            "nullable": true
          }
        }
      },
      "ResourcePermissionPolicy": {
        "type": "object",
        "description": "ResourcePermissionPolicy",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "Gets or Sets Domain",
            "nullable": true
          },
          "entityName": {
            "type": "string",
            "description": "Gets or Sets EntityName",
            "nullable": true
          },
          "policyName": {
            "type": "string",
            "description": "Gets or Sets PolicyName",
            "nullable": true
          },
          "policyDescription": {
            "type": "string",
            "description": "Gets or Sets PolicyDescription",
            "nullable": true
          },
          "actionSetKey": {
            "type": "string",
            "description": "Gets or Sets ActionSetKey",
            "nullable": true
          },
          "allowConditions": {
            "type": "boolean",
            "description": "Gets or Sets AllowConditions",
            "nullable": true
          },
          "resourceConditionNode": {
            "description": "Gets or Sets ResourceConditionNode",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ResourceConditionNode"
              }
            ]
          },
          "namedResources": {
            "type": "array",
            "description": "Gets or Sets NamedResources",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "resourceCondition": {
            "type": "string",
            "description": "Gets or Sets ResourceCondition",
            "nullable": true
          },
          "actionSet": {
            "type": "array",
            "description": "Gets or Sets ActionSet",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ResourceConditionNode": {
        "type": "object",
        "description": "ResourceConditionNode",
        "additionalProperties": false,
        "properties": {
          "conjunction": {
            "description": "Gets or Sets Conjunction",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConjunctionEnum"
              }
            ]
          },
          "operator": {
            "description": "Gets or Sets Operator",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum"
              }
            ]
          },
          "variableName": {
            "type": "string",
            "description": "Gets or Sets VariableName",
            "nullable": true
          },
          "operands": {
            "type": "array",
            "description": "Gets or Sets Operands",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResourceConditionValue"
            }
          },
          "terms": {
            "type": "array",
            "description": "Gets or Sets Terms",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ResourceConditionNode"
            }
          }
        }
      },
      "ConjunctionEnum": {
        "type": "integer",
        "description": "Gets or Sets Conjunction",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "And",
          "Or"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "And",
          "Or"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "And",
          "Or"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "OperatorEnum": {
        "type": "integer",
        "description": "Gets or Sets Operator",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Eq",
          "In",
          "Ge",
          "Gt",
          "Le",
          "Lt"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Eq",
          "In",
          "Ge",
          "Gt",
          "Le",
          "Lt"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Eq",
          "In",
          "Ge",
          "Gt",
          "Le",
          "Lt"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "ResourceConditionValue": {
        "type": "object",
        "description": "ResourceConditionValue",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Gets or Sets Type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum3"
              }
            ]
          },
          "value": {
            "type": "string",
            "description": "Gets or Sets Value",
            "nullable": true
          }
        }
      },
      "TypeEnum3": {
        "type": "integer",
        "description": "Gets or Sets Type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Scalar",
          "Variable",
          "User",
          "Queue",
          "Team"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Scalar",
          "Variable",
          "User",
          "Queue",
          "Team"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Scalar",
          "Variable",
          "User",
          "Queue",
          "Team"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "Location": {
        "type": "object",
        "description": "Location",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the location",
            "nullable": true
          },
          "floorplanId": {
            "type": "string",
            "description": "Unique identifier for the location floorplan image",
            "nullable": true
          },
          "coordinates": {
            "type": "object",
            "description": "Users coordinates on the floorplan. Only used when floorplanImage is set",
            "nullable": true,
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "nullable": true
            }
          },
          "notes": {
            "type": "string",
            "description": "Optional description on the users location",
            "nullable": true
          },
          "locationDefinition": {
            "description": "Gets or Sets LocationDefinition",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LocationDefinition"
              }
            ]
          }
        }
      },
      "Group": {
        "type": "object",
        "description": "Group",
        "additionalProperties": false,
        "properties": {
          "state": {
            "description": "Active, inactive, or deleted state.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateEnum3"
              }
            ]
          },
          "type": {
            "description": "Type of group.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum4"
              }
            ]
          },
          "visibility": {
            "description": "Who can view this group",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VisibilityEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The group name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Gets or Sets Description",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "description": "Last modified date/time. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "description": "Number of members.",
            "format": "int64",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "description": "Current version for this resource.",
            "format": "int32",
            "nullable": true
          },
          "images": {
            "type": "array",
            "description": "Gets or Sets Images",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "addresses": {
            "type": "array",
            "description": "Gets or Sets Addresses",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/GroupContact"
            }
          },
          "rulesVisible": {
            "type": "boolean",
            "description": "Are membership rules visible to the person requesting to view the group",
            "nullable": true
          },
          "rolesEnabled": {
            "type": "boolean",
            "description": "Allow roles to be assigned to this group",
            "nullable": true
          },
          "includeOwners": {
            "type": "boolean",
            "description": "Allow owners to be included as members of the group",
            "nullable": true
          },
          "callsEnabled": {
            "type": "boolean",
            "description": "Allow calls to be placed to this group.",
            "nullable": true
          },
          "owners": {
            "type": "array",
            "description": "Owners of the group",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "StateEnum3": {
        "type": "integer",
        "description": "Active, inactive, or deleted state.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "TypeEnum4": {
        "type": "integer",
        "description": "Type of group.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Official",
          "Social"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Official",
          "Social"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Official",
          "Social"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "VisibilityEnum": {
        "type": "integer",
        "description": "Who can view this group",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Public",
          "Owners",
          "Members"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Public",
          "Owners",
          "Members"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Public",
          "Owners",
          "Members"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "GroupContact": {
        "type": "object",
        "description": "GroupContact",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Contact type of the address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum5"
              }
            ]
          },
          "mediaType": {
            "description": "Media type of the address",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaTypeEnum2"
              }
            ]
          },
          "address": {
            "type": "string",
            "description": "Phone number for this contact type",
            "nullable": true
          },
          "extension": {
            "type": "string",
            "description": "Extension is set if the number is e164 valid",
            "nullable": true
          },
          "display": {
            "type": "string",
            "description": "Formatted version of the address property",
            "nullable": true
          }
        }
      },
      "TypeEnum5": {
        "type": "integer",
        "description": "Contact type of the address",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Groupring",
          "Groupphone"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Groupring",
          "Groupphone"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Groupring",
          "Groupphone"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "MediaTypeEnum2": {
        "type": "integer",
        "description": "Media type of the address",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Phone"
        ],
        "enum": [
          0,
          1
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Phone"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Phone"
        ],
        "x-enum-descriptions": [
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null
        ]
      },
      "Team": {
        "type": "object",
        "description": "Team",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The team name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WritableDivision"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Team information.",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "Last modified datetime. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "description": "Last modified datetime. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "description": "Number of members in a team",
            "format": "int64",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "WritableDivision": {
        "type": "object",
        "description": "WritableDivision",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "WorkPlanBidRanks": {
        "type": "object",
        "description": "WorkPlanBidRanks",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the user.",
            "nullable": true
          },
          "workPlanBiddingPerformance": {
            "type": "integer",
            "description": "Work plan bidding agent performance ranking. The range of values is between 0 and 9999.",
            "format": "int32",
            "nullable": true
          },
          "biddingTieBreaker": {
            "type": "string",
            "description": "Custom agent ranking metric that some customers can use.",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "UserRoutingSkill": {
        "type": "object",
        "description": "Represents an organization skill assigned to a user. When assigning to a user specify the organization skill id as the id.",
        "additionalProperties": false,
        "properties": {
          "state": {
            "description": "Activate or deactivate this routing skill.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateEnum4"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "proficiency": {
            "type": "number",
            "description": "A rating from 0.0 to 5.0 that indicates how adept an agent is at a particular skill. When \\\"Best available skills\\\" is enabled for a queue in Genesys Cloud, ACD interactions in that queue are routed to agents with higher proficiency ratings.",
            "format": "double",
            "nullable": true
          },
          "skillUri": {
            "type": "string",
            "description": "URI to the organization skill used by this user skill.",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "StateEnum4": {
        "type": "integer",
        "description": "Activate or deactivate this routing skill.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "UserRoutingLanguage": {
        "type": "object",
        "description": "Represents an organization language assigned to a user. When assigning to a user specify the organization language id as the id.",
        "additionalProperties": false,
        "properties": {
          "state": {
            "description": "Activate or deactivate this routing language.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/StateEnum5"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "proficiency": {
            "type": "number",
            "description": "A rating from 0.0 to 5.0 that indicates how fluent an agent is in a particular language. ACD interactions are routed to agents with higher proficiency ratings.",
            "format": "double",
            "nullable": true
          },
          "languageUri": {
            "type": "string",
            "description": "URI to the organization language used by this user language.",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "StateEnum5": {
        "type": "integer",
        "description": "Activate or deactivate this routing language.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Active",
          "Inactive",
          "Deleted"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "OAuthLastTokenIssued": {
        "type": "object",
        "description": "OAuthLastTokenIssued",
        "additionalProperties": false,
        "properties": {
          "dateIssued": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "QueueEntityListing": {
        "type": "object",
        "description": "QueueEntityListing",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "description": "Gets or Sets Entities",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Queue"
            }
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets or Sets PageSize",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Gets or Sets PageNumber",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Gets or Sets Total",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "description": "Gets or Sets FirstUri",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "description": "Gets or Sets NextUri",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "description": "Gets or Sets PreviousUri",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "description": "Gets or Sets LastUri",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Gets or Sets PageCount",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Queue": {
        "type": "object",
        "description": "Queue",
        "additionalProperties": false,
        "properties": {
          "scoringMethod": {
            "description": "The Scoring Method for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScoringMethodEnum"
              }
            ]
          },
          "lastAgentRoutingMode": {
            "description": "The Last Agent Routing Mode for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LastAgentRoutingModeEnum"
              }
            ]
          },
          "skillEvaluationMethod": {
            "description": "The skill evaluation method to use when routing conversations.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SkillEvaluationMethodEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Division"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "The queue description.",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the queue was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "description": "The date of the last modification to the queue. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "The ID of the user that last modified the queue.",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "The ID of the user that created the queue.",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "description": "The total number of members in the queue.",
            "format": "int32",
            "nullable": true
          },
          "userMemberCount": {
            "type": "integer",
            "description": "The number of user members (i.e., non-group members) in the queue.",
            "format": "int32",
            "nullable": true
          },
          "joinedMemberCount": {
            "type": "integer",
            "description": "The number of joined members in the queue.",
            "format": "int32",
            "nullable": true
          },
          "mediaSettings": {
            "description": "The media settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueMediaSettings"
              }
            ]
          },
          "routingRules": {
            "type": "array",
            "description": "The routing rules for the queue, used for Preferred Agent Routing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoutingRule"
            }
          },
          "conditionalGroupRouting": {
            "description": "The Conditional Group Routing settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupRouting"
              }
            ]
          },
          "conditionalGroupActivation": {
            "description": "The Conditional Group Activation settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivation"
              }
            ]
          },
          "bullseye": {
            "description": "The bullseye settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bullseye"
              }
            ]
          },
          "acwSettings": {
            "description": "The ACW settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AcwSettings"
              }
            ]
          },
          "memberGroups": {
            "type": "array",
            "description": "The groups of agents associated with the queue, if any.  Queue membership will update to match group membership changes.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          },
          "queueFlow": {
            "description": "The in-queue flow to use for call conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "emailInQueueFlow": {
            "description": "The in-queue flow to use for email conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "messageInQueueFlow": {
            "description": "The in-queue flow to use for message conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "whisperPrompt": {
            "description": "The prompt used for whisper on the queue, if configured.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "onHoldPrompt": {
            "description": "The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "autoAnswerOnly": {
            "type": "boolean",
            "description": "Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.",
            "nullable": true
          },
          "cannedResponseLibraries": {
            "description": "Canned response library IDs and mode with which they are associated with the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CannedResponseLibraries"
              }
            ]
          },
          "enableTranscription": {
            "type": "boolean",
            "description": "Indicates whether voice transcription is enabled for this queue.",
            "nullable": true
          },
          "enableAudioMonitoring": {
            "type": "boolean",
            "description": "Indicates whether audio monitoring is enabled for this queue.",
            "nullable": true
          },
          "enableManualAssignment": {
            "type": "boolean",
            "description": "Indicates whether manual assignment is enabled for this queue.",
            "nullable": true
          },
          "agentOwnedRouting": {
            "description": "The Agent Owned Routing settings for the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AgentOwnedRouting"
              }
            ]
          },
          "directRouting": {
            "description": "The Direct Routing settings for the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRouting"
              }
            ]
          },
          "callingPartyName": {
            "type": "string",
            "description": "The name to use for caller identification for outbound calls from this queue.",
            "nullable": true
          },
          "callingPartyNumber": {
            "type": "string",
            "description": "The phone number to use for caller identification for outbound calls from this queue.",
            "nullable": true
          },
          "defaultScripts": {
            "type": "object",
            "description": "The default script Ids for the communication types.",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/Script"
            }
          },
          "outboundMessagingAddresses": {
            "description": "The messaging addresses for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueMessagingAddresses"
              }
            ]
          },
          "outboundEmailAddress": {
            "description": "The default email address to use for outbound email from this queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueEmailAddress"
              }
            ]
          },
          "peerId": {
            "type": "string",
            "description": "The ID of an associated external queue.",
            "nullable": true
          },
          "suppressInQueueCallRecording": {
            "type": "boolean",
            "description": "Indicates whether recording in-queue calls is suppressed for this queue.",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "ScoringMethodEnum": {
        "type": "integer",
        "description": "The Scoring Method for the queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "LastAgentRoutingModeEnum": {
        "type": "integer",
        "description": "The Last Agent Routing Mode for the queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "SkillEvaluationMethodEnum": {
        "type": "integer",
        "description": "The skill evaluation method to use when routing conversations.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "QueueMediaSettings": {
        "type": "object",
        "description": "QueueMediaSettings",
        "additionalProperties": false,
        "properties": {
          "call": {
            "description": "The queue media settings for call interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSettings"
              }
            ]
          },
          "callback": {
            "description": "The queue media settings for callback interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallbackMediaSettings"
              }
            ]
          },
          "chat": {
            "description": "The queue media settings for chat interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSettings"
              }
            ]
          },
          "email": {
            "description": "The queue media settings for email interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailMediaSettings"
              }
            ]
          },
          "message": {
            "description": "The queue media settings for message interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessageMediaSettings"
              }
            ]
          }
        }
      },
      "MediaSettings": {
        "type": "object",
        "description": "MediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          }
        }
      },
      "ServiceLevel": {
        "type": "object",
        "description": "ServiceLevel",
        "additionalProperties": false,
        "properties": {
          "percentage": {
            "type": "number",
            "description": "The desired Service Level. A value between 0 and 1.",
            "format": "double",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "description": "Service Level target in milliseconds.",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "CallbackMediaSettings": {
        "type": "object",
        "description": "CallbackMediaSettings",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "The mode callbacks will use on this queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModeEnum"
              }
            ]
          },
          "liveVoiceReactionType": {
            "description": "The action to take if a live voice is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiveVoiceReactionTypeEnum"
              }
            ]
          },
          "answeringMachineReactionType": {
            "description": "The action to take if an answering machine is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AnsweringMachineReactionTypeEnum"
              }
            ]
          },
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          },
          "enableAutoDialAndEnd": {
            "type": "boolean",
            "description": "Flag to enable Auto-Dial and Auto-End automation for callbacks on this queue.",
            "nullable": true
          },
          "autoDialDelaySeconds": {
            "type": "integer",
            "description": "Time in seconds after agent connects to callback before outgoing call is auto-dialed. Allowable values in range 0 - 1200 seconds. Defaults to 300 seconds.",
            "format": "int32",
            "nullable": true
          },
          "autoEndDelaySeconds": {
            "type": "integer",
            "description": "Time in seconds after agent disconnects from the outgoing call before the encasing callback is auto-ended. Allowable values in range 0 - 1200 seconds. Defaults to 300 seconds.",
            "format": "int32",
            "nullable": true
          },
          "pacingModifier": {
            "type": "number",
            "description": "Controls the maximum number of outbound calls at one time when mode is CustomerFirst.",
            "format": "double",
            "nullable": true
          },
          "maxRetryCount": {
            "type": "integer",
            "description": "Maximum number of retries that should be attempted to try and connect a customer first callback to a customer when the initial callback attempt did not connect.",
            "format": "int32",
            "nullable": true
          },
          "retryDelaySeconds": {
            "type": "integer",
            "description": "Delay in seconds between each retry of a customer first callback.",
            "format": "int32",
            "nullable": true
          },
          "liveVoiceFlow": {
            "description": "The inbound flow to transfer to if a live voice is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "answeringMachineFlow": {
            "description": "The inbound flow to transfer to if an answering machine is detected during the outbound call of a customer first callback when answeringMachineReactionType is set to TransferToFlow.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "ModeEnum": {
        "type": "integer",
        "description": "The mode callbacks will use on this queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "LiveVoiceReactionTypeEnum": {
        "type": "integer",
        "description": "The action to take if a live voice is detected during the outbound call of a customer first callback.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "AnsweringMachineReactionTypeEnum": {
        "type": "integer",
        "description": "The action to take if an answering machine is detected during the outbound call of a customer first callback.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "DomainEntityRef": {
        "type": "object",
        "description": "DomainEntityRef",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          }
        }
      },
      "EmailMediaSettings": {
        "type": "object",
        "description": "EmailMediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          }
        }
      },
      "MessageMediaSettings": {
        "type": "object",
        "description": "MessageMediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          },
          "subTypeSettings": {
            "type": "object",
            "description": "Map of media subtype to media subtype specific settings.",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageSubtypeSettings"
            }
          }
        }
      },
      "MessageSubtypeSettings": {
        "type": "object",
        "description": "MessageSubtypeSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          }
        }
      },
      "RoutingRule": {
        "type": "object",
        "description": "RoutingRule",
        "additionalProperties": false,
        "properties": {
          "operator": {
            "description": "matching operator.  MEETS_THRESHOLD matches any agent with a score at or above the rule's threshold.  ANY matches all specified agents, regardless of score.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum2"
              }
            ]
          },
          "threshold": {
            "type": "integer",
            "description": "threshold required for routing attempt (generally an agent score).  may be null for operator ANY.",
            "format": "int32",
            "nullable": true
          },
          "waitSeconds": {
            "type": "number",
            "description": "seconds to wait in this rule before moving to the next",
            "format": "double",
            "nullable": true
          }
        }
      },
      "OperatorEnum2": {
        "type": "integer",
        "description": "matching operator.  MEETS_THRESHOLD matches any agent with a score at or above the rule's threshold.  ANY matches all specified agents, regardless of score.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "ConditionalGroupRouting": {
        "type": "object",
        "description": "ConditionalGroupRouting",
        "additionalProperties": false,
        "properties": {
          "rules": {
            "type": "array",
            "description": "The set of rules to be executed for each conversation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupRoutingRule"
            }
          }
        }
      },
      "ConditionalGroupRoutingRule": {
        "type": "object",
        "description": "ConditionalGroupRoutingRule",
        "additionalProperties": false,
        "properties": {
          "metric": {
            "description": "The queue metric being evaluated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricEnum"
              }
            ]
          },
          "operator": {
            "description": "The operator that compares the actual value against the condition value",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum3"
              }
            ]
          },
          "queue": {
            "description": "The queue being evaluated for this rule.  If null, the current queue will be used.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "conditionValue": {
            "type": "number",
            "description": "The limit value, beyond which a rule evaluates as true",
            "format": "double",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "description": "The group(s) to activate if the rule evaluates as true",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          },
          "waitSeconds": {
            "type": "integer",
            "description": "The number of seconds to wait in this rule, if it evaluates as true, before evaluating the next rule.  For the final rule, this is ignored, so need not be specified.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MetricEnum": {
        "type": "integer",
        "description": "The queue metric being evaluated",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "OperatorEnum3": {
        "type": "integer",
        "description": "The operator that compares the actual value against the condition value",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null
        ]
      },
      "MemberGroup": {
        "type": "object",
        "description": "MemberGroup",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "The group type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum6"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WritableDivision"
              }
            ]
          },
          "memberCount": {
            "type": "integer",
            "description": "The number of members in this group",
            "format": "int32",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "TypeEnum6": {
        "type": "integer",
        "description": "The group type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "ConditionalGroupActivation": {
        "type": "object",
        "description": "ConditionalGroupActivation",
        "additionalProperties": false,
        "properties": {
          "pilotRule": {
            "description": "The pilot rule for this queue, which executes periodically to determine queue health",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivationPilotRule"
              }
            ]
          },
          "rules": {
            "type": "array",
            "description": "The set of rules to be periodically executed on the queue (if the pilot rule evaluates as true or there is no pilot rule)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationRule"
            }
          }
        }
      },
      "ConditionalGroupActivationPilotRule": {
        "type": "object",
        "description": "ConditionalGroupActivationPilotRule",
        "additionalProperties": false,
        "properties": {
          "conditions": {
            "type": "array",
            "description": "The list of conditions used in this rule",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationCondition"
            }
          },
          "conditionExpression": {
            "type": "string",
            "description": "A string expression that defines the relationships of conditions in this rule",
            "nullable": true
          }
        }
      },
      "ConditionalGroupActivationCondition": {
        "type": "object",
        "description": "ConditionalGroupActivationCondition",
        "additionalProperties": false,
        "properties": {
          "operator": {
            "description": "The operator used to compare the actual value against the threshold value",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum4"
              }
            ]
          },
          "simpleMetric": {
            "description": "Instructs this condition to evaluate a simple queue-level metric",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivationSimpleMetric"
              }
            ]
          },
          "value": {
            "type": "number",
            "description": "The threshold value, beyond which a rule evaluates as true",
            "format": "double",
            "nullable": true
          }
        }
      },
      "OperatorEnum4": {
        "type": "integer",
        "description": "The operator used to compare the actual value against the threshold value",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "ConditionalGroupActivationSimpleMetric": {
        "type": "object",
        "description": "ConditionalGroupActivationSimpleMetric",
        "additionalProperties": false,
        "properties": {
          "metric": {
            "description": "The queue metric being evaluated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricEnum2"
              }
            ]
          },
          "queue": {
            "description": "The queue being evaluated for this rule.  If null, the current queue will be used.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "MetricEnum2": {
        "type": "integer",
        "description": "The queue metric being evaluated",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "ConditionalGroupActivationRule": {
        "type": "object",
        "description": "ConditionalGroupActivationRule",
        "additionalProperties": false,
        "properties": {
          "conditions": {
            "type": "array",
            "description": "The list of conditions used in this rule",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationCondition"
            }
          },
          "conditionExpression": {
            "type": "string",
            "description": "A string expression that defines the relationships of conditions in this rule",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "description": "The group(s) that this rule activates (if rule evaluates as true) or deactivates (if rule evaluates as false)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          }
        }
      },
      "Bullseye": {
        "type": "object",
        "description": "Bullseye",
        "additionalProperties": false,
        "properties": {
          "rings": {
            "type": "array",
            "description": "The bullseye rings configured for this queue.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Ring"
            }
          }
        }
      },
      "Ring": {
        "type": "object",
        "description": "Ring",
        "additionalProperties": false,
        "properties": {
          "expansionCriteria": {
            "type": "array",
            "description": "The conditions that will trigger conversations to move to the next bullseye ring.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExpansionCriterium"
            }
          },
          "actions": {
            "description": "The actions that will be performed just before moving conversations to the next bullseye ring.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Actions"
              }
            ]
          },
          "memberGroups": {
            "type": "array",
            "description": "The groups of agents associated with the ring, if any.  Ring membership will update to match group membership changes.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          }
        }
      },
      "ExpansionCriterium": {
        "type": "object",
        "description": "ExpansionCriterium",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Gets or Sets Type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum7"
              }
            ]
          },
          "threshold": {
            "type": "number",
            "description": "Gets or Sets Threshold",
            "format": "double",
            "nullable": true
          }
        }
      },
      "TypeEnum7": {
        "type": "integer",
        "description": "Gets or Sets Type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "enum": [
          0,
          1
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "x-enum-descriptions": [
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null
        ]
      },
      "Actions": {
        "type": "object",
        "description": "Actions",
        "additionalProperties": false,
        "properties": {
          "skillsToRemove": {
            "type": "array",
            "description": "Gets or Sets SkillsToRemove",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SkillsToRemove"
            }
          }
        }
      },
      "SkillsToRemove": {
        "type": "object",
        "description": "SkillsToRemove",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          }
        }
      },
      "AcwSettings": {
        "type": "object",
        "description": "AcwSettings",
        "additionalProperties": false,
        "properties": {
          "wrapupPrompt": {
            "description": "This field controls how the UI prompts the agent for a wrapup.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WrapupPromptEnum"
              }
            ]
          },
          "timeoutMs": {
            "type": "integer",
            "description": "The amount of time the agent can stay in ACW (Min: 1 sec, Max: 60 min).  Can only be used when ACW is AGENT_REQUESTED, MANDATORY_TIMEOUT or MANDATORY_FORCED_TIMEOUT.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WrapupPromptEnum": {
        "type": "integer",
        "description": "This field controls how the UI prompts the agent for a wrapup.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "CannedResponseLibraries": {
        "type": "object",
        "description": "CannedResponseLibraries",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "The association mode of canned response libraries to queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModeEnum2"
              }
            ]
          },
          "libraryIds": {
            "type": "array",
            "description": "Set of canned response library IDs associated with the queue only when mode is SelectedOnly.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ModeEnum2": {
        "type": "integer",
        "description": "The association mode of canned response libraries to queue",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "AgentOwnedRouting": {
        "type": "object",
        "description": "AgentOwnedRouting",
        "additionalProperties": false,
        "properties": {
          "enableAgentOwnedCallbacks": {
            "type": "boolean",
            "description": "Indicates if Agent Owned Callbacks are enabled for the queue",
            "nullable": true
          },
          "maxOwnedCallbackHours": {
            "type": "integer",
            "description": "The max amount of time a callback can be owned (in hours); Allowable range 1 - 168 hour(s) (inclusive)",
            "format": "int32",
            "nullable": true
          },
          "maxOwnedCallbackDelayHours": {
            "type": "integer",
            "description": "The max amount of time a callback can be scheduled out into the future (in hours); Allowable range 1 - 720 hour(s) (inclusive)",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DirectRouting": {
        "type": "object",
        "description": "DirectRouting",
        "additionalProperties": false,
        "properties": {
          "callMediaSettings": {
            "description": "Direct Routing Settings specific to Call media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "emailMediaSettings": {
            "description": "Direct Routing Settings specific to Email media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "messageMediaSettings": {
            "description": "Direct Routing Settings specific to Message media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "backupQueueId": {
            "type": "string",
            "description": "ID of another queue to be used as the default backup if an agent does not have their Backup Settings configured. If not set, the current queue will be used as backup, but with Direct Routing criteria removed from the conversation.",
            "nullable": true
          },
          "waitForAgent": {
            "type": "boolean",
            "description": "Flag indicating if Direct Routing interactions should wait for Direct Routing agent or go immediately to selected backup.",
            "nullable": true
          },
          "agentWaitSeconds": {
            "type": "integer",
            "description": "Time (in seconds) that a Direct Routing interaction will wait for Direct Routing agent before going to selected backup. Valid range [60, 864000].",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DirectRoutingMediaSettings": {
        "type": "object",
        "description": "DirectRoutingMediaSettings",
        "additionalProperties": false,
        "properties": {
          "useAgentAddressOutbound": {
            "type": "boolean",
            "description": "Toggle that enables using an agent's Direct Routing address outbound on behalf of queue for this media type.",
            "nullable": true
          }
        }
      },
      "Script": {
        "type": "object",
        "description": "Script",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Division"
              }
            ]
          },
          "versionId": {
            "type": "string",
            "description": "Gets or Sets VersionId",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "publishedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "versionDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "startPageId": {
            "type": "string",
            "description": "Gets or Sets StartPageId",
            "nullable": true
          },
          "startPageName": {
            "type": "string",
            "description": "Gets or Sets StartPageName",
            "nullable": true
          },
          "features": {
            "description": "Gets or Sets Features",
            "nullable": true
          },
          "variables": {
            "description": "Gets or Sets Variables",
            "nullable": true
          },
          "customActions": {
            "description": "Gets or Sets CustomActions",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "description": "Gets or Sets Pages",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "Page": {
        "type": "object",
        "description": "Page",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "description": "Gets or Sets VersionId",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "rootContainer": {
            "type": "object",
            "description": "Gets or Sets RootContainer",
            "nullable": true,
            "additionalProperties": {}
          },
          "properties": {
            "type": "object",
            "description": "Gets or Sets Properties",
            "nullable": true,
            "additionalProperties": {}
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "QueueMessagingAddresses": {
        "type": "object",
        "description": "QueueMessagingAddresses",
        "additionalProperties": false,
        "properties": {
          "smsAddress": {
            "description": "Gets or Sets SmsAddress",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "openMessagingRecipient": {
            "description": "Gets or Sets OpenMessagingRecipient",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "whatsAppRecipient": {
            "description": "Gets or Sets WhatsAppRecipient",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "QueueEmailAddress": {
        "type": "object",
        "description": "QueueEmailAddress",
        "additionalProperties": false,
        "properties": {
          "domain": {
            "description": "Gets or Sets Domain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "route": {
            "description": "Gets or Sets Route",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InboundRoute"
              }
            ]
          }
        }
      },
      "InboundRoute": {
        "type": "object",
        "description": "InboundRoute",
        "additionalProperties": false,
        "properties": {
          "historyInclusion": {
            "description": "The configuration to indicate how the history of a conversation has to be included in a draft",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HistoryInclusionEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "pattern": {
            "type": "string",
            "description": "The search pattern that the mailbox name should match.",
            "nullable": true
          },
          "queue": {
            "description": "The queue to route the emails to.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "The priority to use for routing.",
            "format": "int32",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "description": "The skills to use for routing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DomainEntityRef"
            }
          },
          "language": {
            "description": "The language to use for routing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "fromName": {
            "type": "string",
            "description": "The sender name to use for outgoing replies.",
            "nullable": true
          },
          "fromEmail": {
            "type": "string",
            "description": "The sender email to use for outgoing replies.",
            "nullable": true
          },
          "flow": {
            "description": "The flow to use for processing the email.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "replyEmailAddress": {
            "description": "The route to use for email replies.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueEmailAddress"
              }
            ]
          },
          "autoBcc": {
            "type": "array",
            "description": "The recipients that should be automatically blind copied on outbound emails associated with this InboundRoute.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          },
          "spamFlow": {
            "description": "The flow to use for processing inbound emails that have been marked as spam.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "signature": {
            "description": "The configuration for the canned response signature that will be appended to outbound emails sent via this route",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Signature"
              }
            ]
          },
          "allowMultipleActions": {
            "type": "boolean",
            "description": "Control if multiple actions are allowed on this route. When true the disconnect has to be done manually. When false a conversation will be disconnected by the system after every action",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "HistoryInclusionEnum": {
        "type": "integer",
        "description": "The configuration to indicate how the history of a conversation has to be included in a draft",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "EmailAddress": {
        "type": "object",
        "description": "EmailAddress",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "Gets or Sets Email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          }
        }
      },
      "Signature": {
        "type": "object",
        "description": "Signature",
        "additionalProperties": false,
        "properties": {
          "inclusionType": {
            "description": "The configuration to indicate when the signature of a conversation has to be included",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InclusionTypeEnum"
              }
            ]
          },
          "enabled": {
            "type": "boolean",
            "description": "A toggle to enable the signature on email send.",
            "nullable": true
          },
          "cannedResponseId": {
            "type": "string",
            "description": "The identifier referring to an email signature canned response.",
            "nullable": true
          },
          "alwaysIncluded": {
            "type": "boolean",
            "description": "A toggle that defines if a signature is always included or only set on the first email in an email chain.",
            "nullable": true
          }
        }
      },
      "InclusionTypeEnum": {
        "type": "integer",
        "description": "The configuration to indicate when the signature of a conversation has to be included",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "PagedResultDTOOfUserDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "listaGrupos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDTO"
            }
          }
        }
      }
    }
  }
}