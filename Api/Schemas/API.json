{
  "x-generator": "NSwag v14.5.0.0 (NJsonSchema v11.4.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Genesys API",
    "version": "v1"
  },
  "paths": {
    "/api/Groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_GetGroups",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDTOOfGroupDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Groups/{id}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "operationId": "Groups_GetGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/routing/queues": {
      "get": {
        "tags": [
          "Routing"
        ],
        "operationId": "Routing_GetQueues",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueEntityListing"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/routing/queues/divisionviews": {
      "get": {
        "tags": [
          "Routing"
        ],
        "operationId": "Routing_GetQueuesDivisionviews",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          },
          {
            "name": "divisionId",
            "x-originalName": "divisionIds",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueueEntityListing"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Users": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUsers",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 25
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PagedResultDTOOfUserDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": ""
          }
        }
      }
    },
    "/api/Users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "operationId": "Users_GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PagedResultDTOOfGroupDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "GroupDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "listaUsuarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            }
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "listaGrupos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDTO"
            }
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "QueueEntityListing": {
        "type": "object",
        "description": "QueueEntityListing",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "description": "Gets or Sets Entities",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Queue"
            }
          },
          "pageSize": {
            "type": "integer",
            "description": "Gets or Sets PageSize",
            "format": "int32",
            "nullable": true
          },
          "pageNumber": {
            "type": "integer",
            "description": "Gets or Sets PageNumber",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "description": "Gets or Sets Total",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "description": "Gets or Sets FirstUri",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "description": "Gets or Sets NextUri",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "description": "Gets or Sets PreviousUri",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "description": "Gets or Sets LastUri",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "description": "Gets or Sets PageCount",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Queue": {
        "type": "object",
        "description": "Queue",
        "additionalProperties": false,
        "properties": {
          "scoringMethod": {
            "description": "The Scoring Method for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ScoringMethodEnum"
              }
            ]
          },
          "lastAgentRoutingMode": {
            "description": "The Last Agent Routing Mode for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LastAgentRoutingModeEnum"
              }
            ]
          },
          "skillEvaluationMethod": {
            "description": "The skill evaluation method to use when routing conversations.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SkillEvaluationMethodEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Division"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "The queue description.",
            "nullable": true
          },
          "dateCreated": {
            "type": "string",
            "description": "The date the queue was created. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "description": "The date of the last modification to the queue. Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "description": "The ID of the user that last modified the queue.",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "description": "The ID of the user that created the queue.",
            "nullable": true
          },
          "memberCount": {
            "type": "integer",
            "description": "The total number of members in the queue.",
            "format": "int32",
            "nullable": true
          },
          "userMemberCount": {
            "type": "integer",
            "description": "The number of user members (i.e., non-group members) in the queue.",
            "format": "int32",
            "nullable": true
          },
          "joinedMemberCount": {
            "type": "integer",
            "description": "The number of joined members in the queue.",
            "format": "int32",
            "nullable": true
          },
          "mediaSettings": {
            "description": "The media settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueMediaSettings"
              }
            ]
          },
          "routingRules": {
            "type": "array",
            "description": "The routing rules for the queue, used for Preferred Agent Routing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoutingRule"
            }
          },
          "conditionalGroupRouting": {
            "description": "The Conditional Group Routing settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupRouting"
              }
            ]
          },
          "conditionalGroupActivation": {
            "description": "The Conditional Group Activation settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivation"
              }
            ]
          },
          "bullseye": {
            "description": "The bullseye settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Bullseye"
              }
            ]
          },
          "acwSettings": {
            "description": "The ACW settings for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AcwSettings"
              }
            ]
          },
          "memberGroups": {
            "type": "array",
            "description": "The groups of agents associated with the queue, if any.  Queue membership will update to match group membership changes.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          },
          "queueFlow": {
            "description": "The in-queue flow to use for call conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "emailInQueueFlow": {
            "description": "The in-queue flow to use for email conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "messageInQueueFlow": {
            "description": "The in-queue flow to use for message conversations waiting in queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "whisperPrompt": {
            "description": "The prompt used for whisper on the queue, if configured.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "onHoldPrompt": {
            "description": "The audio to be played when calls on this queue are on hold. If not configured, the default on-hold music will play.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "autoAnswerOnly": {
            "type": "boolean",
            "description": "Specifies whether the configured whisper should play for all ACD calls, or only for those which are auto-answered.",
            "nullable": true
          },
          "cannedResponseLibraries": {
            "description": "Canned response library IDs and mode with which they are associated with the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CannedResponseLibraries"
              }
            ]
          },
          "enableTranscription": {
            "type": "boolean",
            "description": "Indicates whether voice transcription is enabled for this queue.",
            "nullable": true
          },
          "enableAudioMonitoring": {
            "type": "boolean",
            "description": "Indicates whether audio monitoring is enabled for this queue.",
            "nullable": true
          },
          "enableManualAssignment": {
            "type": "boolean",
            "description": "Indicates whether manual assignment is enabled for this queue.",
            "nullable": true
          },
          "agentOwnedRouting": {
            "description": "The Agent Owned Routing settings for the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AgentOwnedRouting"
              }
            ]
          },
          "directRouting": {
            "description": "The Direct Routing settings for the queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRouting"
              }
            ]
          },
          "callingPartyName": {
            "type": "string",
            "description": "The name to use for caller identification for outbound calls from this queue.",
            "nullable": true
          },
          "callingPartyNumber": {
            "type": "string",
            "description": "The phone number to use for caller identification for outbound calls from this queue.",
            "nullable": true
          },
          "defaultScripts": {
            "type": "object",
            "description": "The default script Ids for the communication types.",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/Script"
            }
          },
          "outboundMessagingAddresses": {
            "description": "The messaging addresses for the queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueMessagingAddresses"
              }
            ]
          },
          "outboundEmailAddress": {
            "description": "The default email address to use for outbound email from this queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueEmailAddress"
              }
            ]
          },
          "peerId": {
            "type": "string",
            "description": "The ID of an associated external queue.",
            "nullable": true
          },
          "suppressInQueueCallRecording": {
            "type": "boolean",
            "description": "Indicates whether recording in-queue calls is suppressed for this queue.",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "ScoringMethodEnum": {
        "type": "integer",
        "description": "The Scoring Method for the queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Timestampandpriority",
          "Priorityonly"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "LastAgentRoutingModeEnum": {
        "type": "integer",
        "description": "The Last Agent Routing Mode for the queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Disabled",
          "Queuemembersonly",
          "Anyagent"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "SkillEvaluationMethodEnum": {
        "type": "integer",
        "description": "The skill evaluation method to use when routing conversations.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "None",
          "Best",
          "All"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "Division": {
        "type": "object",
        "description": "Division",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "QueueMediaSettings": {
        "type": "object",
        "description": "QueueMediaSettings",
        "additionalProperties": false,
        "properties": {
          "call": {
            "description": "The queue media settings for call interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSettings"
              }
            ]
          },
          "callback": {
            "description": "The queue media settings for callback interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CallbackMediaSettings"
              }
            ]
          },
          "chat": {
            "description": "The queue media settings for chat interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MediaSettings"
              }
            ]
          },
          "email": {
            "description": "The queue media settings for email interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailMediaSettings"
              }
            ]
          },
          "message": {
            "description": "The queue media settings for message interactions.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MessageMediaSettings"
              }
            ]
          }
        }
      },
      "MediaSettings": {
        "type": "object",
        "description": "MediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          }
        }
      },
      "ServiceLevel": {
        "type": "object",
        "description": "ServiceLevel",
        "additionalProperties": false,
        "properties": {
          "percentage": {
            "type": "number",
            "description": "The desired Service Level. A value between 0 and 1.",
            "format": "double",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "description": "Service Level target in milliseconds.",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "CallbackMediaSettings": {
        "type": "object",
        "description": "CallbackMediaSettings",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "The mode callbacks will use on this queue.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModeEnum"
              }
            ]
          },
          "liveVoiceReactionType": {
            "description": "The action to take if a live voice is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/LiveVoiceReactionTypeEnum"
              }
            ]
          },
          "answeringMachineReactionType": {
            "description": "The action to take if an answering machine is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/AnsweringMachineReactionTypeEnum"
              }
            ]
          },
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          },
          "enableAutoDialAndEnd": {
            "type": "boolean",
            "description": "Flag to enable Auto-Dial and Auto-End automation for callbacks on this queue.",
            "nullable": true
          },
          "autoDialDelaySeconds": {
            "type": "integer",
            "description": "Time in seconds after agent connects to callback before outgoing call is auto-dialed. Allowable values in range 0 - 1200 seconds. Defaults to 300 seconds.",
            "format": "int32",
            "nullable": true
          },
          "autoEndDelaySeconds": {
            "type": "integer",
            "description": "Time in seconds after agent disconnects from the outgoing call before the encasing callback is auto-ended. Allowable values in range 0 - 1200 seconds. Defaults to 300 seconds.",
            "format": "int32",
            "nullable": true
          },
          "pacingModifier": {
            "type": "number",
            "description": "Controls the maximum number of outbound calls at one time when mode is CustomerFirst.",
            "format": "double",
            "nullable": true
          },
          "maxRetryCount": {
            "type": "integer",
            "description": "Maximum number of retries that should be attempted to try and connect a customer first callback to a customer when the initial callback attempt did not connect.",
            "format": "int32",
            "nullable": true
          },
          "retryDelaySeconds": {
            "type": "integer",
            "description": "Delay in seconds between each retry of a customer first callback.",
            "format": "int32",
            "nullable": true
          },
          "liveVoiceFlow": {
            "description": "The inbound flow to transfer to if a live voice is detected during the outbound call of a customer first callback.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "answeringMachineFlow": {
            "description": "The inbound flow to transfer to if an answering machine is detected during the outbound call of a customer first callback when answeringMachineReactionType is set to TransferToFlow.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "ModeEnum": {
        "type": "integer",
        "description": "The mode callbacks will use on this queue.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Agentfirst",
          "Customerfirst"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "LiveVoiceReactionTypeEnum": {
        "type": "integer",
        "description": "The action to take if a live voice is detected during the outbound call of a customer first callback.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "AnsweringMachineReactionTypeEnum": {
        "type": "integer",
        "description": "The action to take if an answering machine is detected during the outbound call of a customer first callback.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Hangup",
          "Transfertoqueue",
          "Transfertoflow"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "DomainEntityRef": {
        "type": "object",
        "description": "DomainEntityRef",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          }
        }
      },
      "EmailMediaSettings": {
        "type": "object",
        "description": "EmailMediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          }
        }
      },
      "MessageMediaSettings": {
        "type": "object",
        "description": "MessageMediaSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          },
          "alertingTimeoutSeconds": {
            "type": "integer",
            "description": "The alerting timeout for the media type, in seconds",
            "format": "int32",
            "nullable": true
          },
          "serviceLevel": {
            "description": "The targeted service level for the media type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ServiceLevel"
              }
            ]
          },
          "autoAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for an auto-answer interaction",
            "format": "double",
            "nullable": true
          },
          "manualAnswerAlertToneSeconds": {
            "type": "number",
            "description": "How long to play the alerting tone for a manual-answer interaction",
            "format": "double",
            "nullable": true
          },
          "subTypeSettings": {
            "type": "object",
            "description": "Map of media subtype to media subtype specific settings.",
            "nullable": true,
            "additionalProperties": {
              "$ref": "#/components/schemas/MessageSubtypeSettings"
            }
          }
        }
      },
      "MessageSubtypeSettings": {
        "type": "object",
        "description": "MessageSubtypeSettings",
        "additionalProperties": false,
        "properties": {
          "enableAutoAnswer": {
            "type": "boolean",
            "description": "Indicates if auto-answer is enabled for the given media type or subtype (default is false).  Subtype settings take precedence over media type settings.",
            "nullable": true
          }
        }
      },
      "RoutingRule": {
        "type": "object",
        "description": "RoutingRule",
        "additionalProperties": false,
        "properties": {
          "operator": {
            "description": "matching operator.  MEETS_THRESHOLD matches any agent with a score at or above the rule's threshold.  ANY matches all specified agents, regardless of score.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum"
              }
            ]
          },
          "threshold": {
            "type": "integer",
            "description": "threshold required for routing attempt (generally an agent score).  may be null for operator ANY.",
            "format": "int32",
            "nullable": true
          },
          "waitSeconds": {
            "type": "number",
            "description": "seconds to wait in this rule before moving to the next",
            "format": "double",
            "nullable": true
          }
        }
      },
      "OperatorEnum": {
        "type": "integer",
        "description": "matching operator.  MEETS_THRESHOLD matches any agent with a score at or above the rule's threshold.  ANY matches all specified agents, regardless of score.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "MeetsThreshold",
          "Any"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "ConditionalGroupRouting": {
        "type": "object",
        "description": "ConditionalGroupRouting",
        "additionalProperties": false,
        "properties": {
          "rules": {
            "type": "array",
            "description": "The set of rules to be executed for each conversation",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupRoutingRule"
            }
          }
        }
      },
      "ConditionalGroupRoutingRule": {
        "type": "object",
        "description": "ConditionalGroupRoutingRule",
        "additionalProperties": false,
        "properties": {
          "metric": {
            "description": "The queue metric being evaluated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricEnum"
              }
            ]
          },
          "operator": {
            "description": "The operator that compares the actual value against the condition value",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum2"
              }
            ]
          },
          "queue": {
            "description": "The queue being evaluated for this rule.  If null, the current queue will be used.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "conditionValue": {
            "type": "number",
            "description": "The limit value, beyond which a rule evaluates as true",
            "format": "double",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "description": "The group(s) to activate if the rule evaluates as true",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          },
          "waitSeconds": {
            "type": "integer",
            "description": "The number of seconds to wait in this rule, if it evaluates as true, before evaluating the next rule.  For the final rule, this is ignored, so need not be specified.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "MetricEnum": {
        "type": "integer",
        "description": "The queue metric being evaluated",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "enum": [
          0,
          1,
          2
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Servicelevel"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null
        ]
      },
      "OperatorEnum2": {
        "type": "integer",
        "description": "The operator that compares the actual value against the condition value",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null
        ]
      },
      "MemberGroup": {
        "type": "object",
        "description": "MemberGroup",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "The group type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WritableDivision"
              }
            ]
          },
          "memberCount": {
            "type": "integer",
            "description": "The number of members in this group",
            "format": "int32",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "TypeEnum": {
        "type": "integer",
        "description": "The group type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Team",
          "Group",
          "Skillgroup"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "WritableDivision": {
        "type": "object",
        "description": "WritableDivision",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "ConditionalGroupActivation": {
        "type": "object",
        "description": "ConditionalGroupActivation",
        "additionalProperties": false,
        "properties": {
          "pilotRule": {
            "description": "The pilot rule for this queue, which executes periodically to determine queue health",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivationPilotRule"
              }
            ]
          },
          "rules": {
            "type": "array",
            "description": "The set of rules to be periodically executed on the queue (if the pilot rule evaluates as true or there is no pilot rule)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationRule"
            }
          }
        }
      },
      "ConditionalGroupActivationPilotRule": {
        "type": "object",
        "description": "ConditionalGroupActivationPilotRule",
        "additionalProperties": false,
        "properties": {
          "conditions": {
            "type": "array",
            "description": "The list of conditions used in this rule",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationCondition"
            }
          },
          "conditionExpression": {
            "type": "string",
            "description": "A string expression that defines the relationships of conditions in this rule",
            "nullable": true
          }
        }
      },
      "ConditionalGroupActivationCondition": {
        "type": "object",
        "description": "ConditionalGroupActivationCondition",
        "additionalProperties": false,
        "properties": {
          "operator": {
            "description": "The operator used to compare the actual value against the threshold value",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OperatorEnum3"
              }
            ]
          },
          "simpleMetric": {
            "description": "Instructs this condition to evaluate a simple queue-level metric",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ConditionalGroupActivationSimpleMetric"
              }
            ]
          },
          "value": {
            "type": "number",
            "description": "The threshold value, beyond which a rule evaluates as true",
            "format": "double",
            "nullable": true
          }
        }
      },
      "OperatorEnum3": {
        "type": "integer",
        "description": "The operator used to compare the actual value against the threshold value",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Greaterthan",
          "Greaterthanorequalto",
          "Lessthan",
          "Lessthanorequalto",
          "Equalto",
          "Notequalto"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "ConditionalGroupActivationSimpleMetric": {
        "type": "object",
        "description": "ConditionalGroupActivationSimpleMetric",
        "additionalProperties": false,
        "properties": {
          "metric": {
            "description": "The queue metric being evaluated",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MetricEnum2"
              }
            ]
          },
          "queue": {
            "description": "The queue being evaluated for this rule.  If null, the current queue will be used.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "MetricEnum2": {
        "type": "integer",
        "description": "The queue metric being evaluated",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Estimatedwaittime",
          "Idleagentcount",
          "Servicelevel"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "ConditionalGroupActivationRule": {
        "type": "object",
        "description": "ConditionalGroupActivationRule",
        "additionalProperties": false,
        "properties": {
          "conditions": {
            "type": "array",
            "description": "The list of conditions used in this rule",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ConditionalGroupActivationCondition"
            }
          },
          "conditionExpression": {
            "type": "string",
            "description": "A string expression that defines the relationships of conditions in this rule",
            "nullable": true
          },
          "groups": {
            "type": "array",
            "description": "The group(s) that this rule activates (if rule evaluates as true) or deactivates (if rule evaluates as false)",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          }
        }
      },
      "Bullseye": {
        "type": "object",
        "description": "Bullseye",
        "additionalProperties": false,
        "properties": {
          "rings": {
            "type": "array",
            "description": "The bullseye rings configured for this queue.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Ring"
            }
          }
        }
      },
      "Ring": {
        "type": "object",
        "description": "Ring",
        "additionalProperties": false,
        "properties": {
          "expansionCriteria": {
            "type": "array",
            "description": "The conditions that will trigger conversations to move to the next bullseye ring.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/ExpansionCriterium"
            }
          },
          "actions": {
            "description": "The actions that will be performed just before moving conversations to the next bullseye ring.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Actions"
              }
            ]
          },
          "memberGroups": {
            "type": "array",
            "description": "The groups of agents associated with the ring, if any.  Ring membership will update to match group membership changes.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/MemberGroup"
            }
          }
        }
      },
      "ExpansionCriterium": {
        "type": "object",
        "description": "ExpansionCriterium",
        "additionalProperties": false,
        "properties": {
          "type": {
            "description": "Gets or Sets Type",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/TypeEnum2"
              }
            ]
          },
          "threshold": {
            "type": "number",
            "description": "Gets or Sets Threshold",
            "format": "double",
            "nullable": true
          }
        }
      },
      "TypeEnum2": {
        "type": "integer",
        "description": "Gets or Sets Type",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "enum": [
          0,
          1
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "TimeoutSeconds"
        ],
        "x-enum-descriptions": [
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null
        ]
      },
      "Actions": {
        "type": "object",
        "description": "Actions",
        "additionalProperties": false,
        "properties": {
          "skillsToRemove": {
            "type": "array",
            "description": "Gets or Sets SkillsToRemove",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SkillsToRemove"
            }
          }
        }
      },
      "SkillsToRemove": {
        "type": "object",
        "description": "SkillsToRemove",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "Gets or Sets Id",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "Gets or Sets SelfUri",
            "nullable": true
          }
        }
      },
      "AcwSettings": {
        "type": "object",
        "description": "AcwSettings",
        "additionalProperties": false,
        "properties": {
          "wrapupPrompt": {
            "description": "This field controls how the UI prompts the agent for a wrapup.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/WrapupPromptEnum"
              }
            ]
          },
          "timeoutMs": {
            "type": "integer",
            "description": "The amount of time the agent can stay in ACW (Min: 1 sec, Max: 60 min).  Can only be used when ACW is AGENT_REQUESTED, MANDATORY_TIMEOUT or MANDATORY_FORCED_TIMEOUT.",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "WrapupPromptEnum": {
        "type": "integer",
        "description": "This field controls how the UI prompts the agent for a wrapup.",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Mandatory",
          "Optional",
          "MandatoryTimeout",
          "MandatoryForcedTimeout",
          "AgentRequested"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "CannedResponseLibraries": {
        "type": "object",
        "description": "CannedResponseLibraries",
        "additionalProperties": false,
        "properties": {
          "mode": {
            "description": "The association mode of canned response libraries to queue",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ModeEnum2"
              }
            ]
          },
          "libraryIds": {
            "type": "array",
            "description": "Set of canned response library IDs associated with the queue only when mode is SelectedOnly.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ModeEnum2": {
        "type": "integer",
        "description": "The association mode of canned response libraries to queue",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "All",
          "Selectedonly",
          "None"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "AgentOwnedRouting": {
        "type": "object",
        "description": "AgentOwnedRouting",
        "additionalProperties": false,
        "properties": {
          "enableAgentOwnedCallbacks": {
            "type": "boolean",
            "description": "Indicates if Agent Owned Callbacks are enabled for the queue",
            "nullable": true
          },
          "maxOwnedCallbackHours": {
            "type": "integer",
            "description": "The max amount of time a callback can be owned (in hours); Allowable range 1 - 168 hour(s) (inclusive)",
            "format": "int32",
            "nullable": true
          },
          "maxOwnedCallbackDelayHours": {
            "type": "integer",
            "description": "The max amount of time a callback can be scheduled out into the future (in hours); Allowable range 1 - 720 hour(s) (inclusive)",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DirectRouting": {
        "type": "object",
        "description": "DirectRouting",
        "additionalProperties": false,
        "properties": {
          "callMediaSettings": {
            "description": "Direct Routing Settings specific to Call media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "emailMediaSettings": {
            "description": "Direct Routing Settings specific to Email media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "messageMediaSettings": {
            "description": "Direct Routing Settings specific to Message media.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DirectRoutingMediaSettings"
              }
            ]
          },
          "backupQueueId": {
            "type": "string",
            "description": "ID of another queue to be used as the default backup if an agent does not have their Backup Settings configured. If not set, the current queue will be used as backup, but with Direct Routing criteria removed from the conversation.",
            "nullable": true
          },
          "waitForAgent": {
            "type": "boolean",
            "description": "Flag indicating if Direct Routing interactions should wait for Direct Routing agent or go immediately to selected backup.",
            "nullable": true
          },
          "agentWaitSeconds": {
            "type": "integer",
            "description": "Time (in seconds) that a Direct Routing interaction will wait for Direct Routing agent before going to selected backup. Valid range [60, 864000].",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "DirectRoutingMediaSettings": {
        "type": "object",
        "description": "DirectRoutingMediaSettings",
        "additionalProperties": false,
        "properties": {
          "useAgentAddressOutbound": {
            "type": "boolean",
            "description": "Toggle that enables using an agent's Direct Routing address outbound on behalf of queue for this media type.",
            "nullable": true
          }
        }
      },
      "Script": {
        "type": "object",
        "description": "Script",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "division": {
            "description": "The division to which this entity belongs.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Division"
              }
            ]
          },
          "versionId": {
            "type": "string",
            "description": "Gets or Sets VersionId",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "publishedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "versionDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "startPageId": {
            "type": "string",
            "description": "Gets or Sets StartPageId",
            "nullable": true
          },
          "startPageName": {
            "type": "string",
            "description": "Gets or Sets StartPageName",
            "nullable": true
          },
          "features": {
            "description": "Gets or Sets Features",
            "nullable": true
          },
          "variables": {
            "description": "Gets or Sets Variables",
            "nullable": true
          },
          "customActions": {
            "description": "Gets or Sets CustomActions",
            "nullable": true
          },
          "pages": {
            "type": "array",
            "description": "Gets or Sets Pages",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Page"
            }
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "Page": {
        "type": "object",
        "description": "Page",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "versionId": {
            "type": "string",
            "description": "Gets or Sets VersionId",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date time is represented as an ISO-8601 string. For example: yyyy-MM-ddTHH:mm:ss[.mmm]Z",
            "format": "date-time",
            "nullable": true
          },
          "rootContainer": {
            "type": "object",
            "description": "Gets or Sets RootContainer",
            "nullable": true,
            "additionalProperties": {}
          },
          "properties": {
            "type": "object",
            "description": "Gets or Sets Properties",
            "nullable": true,
            "additionalProperties": {}
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "QueueMessagingAddresses": {
        "type": "object",
        "description": "QueueMessagingAddresses",
        "additionalProperties": false,
        "properties": {
          "smsAddress": {
            "description": "Gets or Sets SmsAddress",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "openMessagingRecipient": {
            "description": "Gets or Sets OpenMessagingRecipient",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "whatsAppRecipient": {
            "description": "Gets or Sets WhatsAppRecipient",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          }
        }
      },
      "QueueEmailAddress": {
        "type": "object",
        "description": "QueueEmailAddress",
        "additionalProperties": false,
        "properties": {
          "domain": {
            "description": "Gets or Sets Domain",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "route": {
            "description": "Gets or Sets Route",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InboundRoute"
              }
            ]
          }
        }
      },
      "InboundRoute": {
        "type": "object",
        "description": "InboundRoute",
        "additionalProperties": false,
        "properties": {
          "historyInclusion": {
            "description": "The configuration to indicate how the history of a conversation has to be included in a draft",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/HistoryInclusionEnum"
              }
            ]
          },
          "id": {
            "type": "string",
            "description": "The globally unique identifier for the object.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          },
          "pattern": {
            "type": "string",
            "description": "The search pattern that the mailbox name should match.",
            "nullable": true
          },
          "queue": {
            "description": "The queue to route the emails to.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "priority": {
            "type": "integer",
            "description": "The priority to use for routing.",
            "format": "int32",
            "nullable": true
          },
          "skills": {
            "type": "array",
            "description": "The skills to use for routing.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DomainEntityRef"
            }
          },
          "language": {
            "description": "The language to use for routing.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "fromName": {
            "type": "string",
            "description": "The sender name to use for outgoing replies.",
            "nullable": true
          },
          "fromEmail": {
            "type": "string",
            "description": "The sender email to use for outgoing replies.",
            "nullable": true
          },
          "flow": {
            "description": "The flow to use for processing the email.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "replyEmailAddress": {
            "description": "The route to use for email replies.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/QueueEmailAddress"
              }
            ]
          },
          "autoBcc": {
            "type": "array",
            "description": "The recipients that should be automatically blind copied on outbound emails associated with this InboundRoute.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/EmailAddress"
            }
          },
          "spamFlow": {
            "description": "The flow to use for processing inbound emails that have been marked as spam.",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DomainEntityRef"
              }
            ]
          },
          "signature": {
            "description": "The configuration for the canned response signature that will be appended to outbound emails sent via this route",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Signature"
              }
            ]
          },
          "allowMultipleActions": {
            "type": "boolean",
            "description": "Control if multiple actions are allowed on this route. When true the disconnect has to be done manually. When false a conversation will be disconnected by the system after every action",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "description": "The URI for this object",
            "nullable": true
          }
        }
      },
      "HistoryInclusionEnum": {
        "type": "integer",
        "description": "The configuration to indicate how the history of a conversation has to be included in a draft",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Include",
          "Exclude",
          "Optional"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "EmailAddress": {
        "type": "object",
        "description": "EmailAddress",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "description": "Gets or Sets Email",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Gets or Sets Name",
            "nullable": true
          }
        }
      },
      "Signature": {
        "type": "object",
        "description": "Signature",
        "additionalProperties": false,
        "properties": {
          "inclusionType": {
            "description": "The configuration to indicate when the signature of a conversation has to be included",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InclusionTypeEnum"
              }
            ]
          },
          "enabled": {
            "type": "boolean",
            "description": "A toggle to enable the signature on email send.",
            "nullable": true
          },
          "cannedResponseId": {
            "type": "string",
            "description": "The identifier referring to an email signature canned response.",
            "nullable": true
          },
          "alwaysIncluded": {
            "type": "boolean",
            "description": "A toggle that defines if a signature is always included or only set on the first email in an email chain.",
            "nullable": true
          }
        }
      },
      "InclusionTypeEnum": {
        "type": "integer",
        "description": "The configuration to indicate when the signature of a conversation has to be included",
        "x-enumNames": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ],
        "x-enum-names": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "x-enum-varnames": [
          "OutdatedSdkVersion",
          "Draft",
          "Send",
          "Sendonce"
        ],
        "x-enum-descriptions": [
          null,
          null,
          null,
          null
        ],
        "x-enumDescriptions": [
          null,
          null,
          null,
          null
        ]
      },
      "PagedResultDTOOfUserDTO": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserDTO"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "firstUri": {
            "type": "string",
            "nullable": true
          },
          "nextUri": {
            "type": "string",
            "nullable": true
          },
          "previousUri": {
            "type": "string",
            "nullable": true
          },
          "lastUri": {
            "type": "string",
            "nullable": true
          },
          "selfUri": {
            "type": "string",
            "nullable": true
          },
          "pageCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      }
    }
  }
}